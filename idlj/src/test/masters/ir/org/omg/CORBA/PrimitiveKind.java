/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://oss.oracle.com/licenses/CDDL+GPL-1.1
 * or LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */

package org.omg.CORBA;

/**
* org/omg/CORBA/PrimitiveKind.java .
* IGNORE Generated by the IDL-to-Java compiler (portable), version "3.2"
* from idlj/src/main/java/com/sun/tools/corba/ee/idl/ir.idl
* IGNORE Sunday, January 21, 2018 1:54:22 PM EST
*/

public class PrimitiveKind implements org.omg.CORBA.portable.IDLEntity
{
  private        int __value;
  private static int __size = 16;
  private static org.omg.CORBA.PrimitiveKind[] __array = new org.omg.CORBA.PrimitiveKind [__size];

  public static final int _pk_null = 0;
  public static final org.omg.CORBA.PrimitiveKind pk_null = new org.omg.CORBA.PrimitiveKind(_pk_null);
  public static final int _pk_void = 1;
  public static final org.omg.CORBA.PrimitiveKind pk_void = new org.omg.CORBA.PrimitiveKind(_pk_void);
  public static final int _pk_short = 2;
  public static final org.omg.CORBA.PrimitiveKind pk_short = new org.omg.CORBA.PrimitiveKind(_pk_short);
  public static final int _pk_long = 3;
  public static final org.omg.CORBA.PrimitiveKind pk_long = new org.omg.CORBA.PrimitiveKind(_pk_long);
  public static final int _pk_ushort = 4;
  public static final org.omg.CORBA.PrimitiveKind pk_ushort = new org.omg.CORBA.PrimitiveKind(_pk_ushort);
  public static final int _pk_ulong = 5;
  public static final org.omg.CORBA.PrimitiveKind pk_ulong = new org.omg.CORBA.PrimitiveKind(_pk_ulong);
  public static final int _pk_float = 6;
  public static final org.omg.CORBA.PrimitiveKind pk_float = new org.omg.CORBA.PrimitiveKind(_pk_float);
  public static final int _pk_double = 7;
  public static final org.omg.CORBA.PrimitiveKind pk_double = new org.omg.CORBA.PrimitiveKind(_pk_double);
  public static final int _pk_boolean = 8;
  public static final org.omg.CORBA.PrimitiveKind pk_boolean = new org.omg.CORBA.PrimitiveKind(_pk_boolean);
  public static final int _pk_char = 9;
  public static final org.omg.CORBA.PrimitiveKind pk_char = new org.omg.CORBA.PrimitiveKind(_pk_char);
  public static final int _pk_octet = 10;
  public static final org.omg.CORBA.PrimitiveKind pk_octet = new org.omg.CORBA.PrimitiveKind(_pk_octet);
  public static final int _pk_any = 11;
  public static final org.omg.CORBA.PrimitiveKind pk_any = new org.omg.CORBA.PrimitiveKind(_pk_any);
  public static final int _pk_TypeCode = 12;
  public static final org.omg.CORBA.PrimitiveKind pk_TypeCode = new org.omg.CORBA.PrimitiveKind(_pk_TypeCode);
  public static final int _pk_Principal = 13;
  public static final org.omg.CORBA.PrimitiveKind pk_Principal = new org.omg.CORBA.PrimitiveKind(_pk_Principal);
  public static final int _pk_string = 14;
  public static final org.omg.CORBA.PrimitiveKind pk_string = new org.omg.CORBA.PrimitiveKind(_pk_string);
  public static final int _pk_objref = 15;
  public static final org.omg.CORBA.PrimitiveKind pk_objref = new org.omg.CORBA.PrimitiveKind(_pk_objref);

  public int value ()
  {
    return __value;
  }

  public static org.omg.CORBA.PrimitiveKind from_int (int value)
  {
    if (value >= 0 && value < __size)
      return __array[value];
    else
      throw new org.omg.CORBA.BAD_PARAM ();
  }

  protected PrimitiveKind (int value)
  {
    __value = value;
    __array[__value] = this;
  }
} // class PrimitiveKind
