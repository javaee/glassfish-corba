/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://oss.oracle.com/licenses/CDDL+GPL-1.1
 * or LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */

package org.glassfish.idlj;

/**
* org/glassfish/idlj/CORBAUnion.java .
* Generated by the IDL-to-Java compiler (portable), version "4.1"
* from /Users/rgold/projects/glassfish/glassfish-corba/idlj/src/main/idl/org/glassfish/idlj/CORBAServerTest.idl
* Monday, January 29, 2018 11:19:41 AM EST
*/

public final class CORBAUnion implements org.omg.CORBA.portable.IDLEntity
{
  private boolean ___b;
  private String ___w;
  private String ___s;
  private org.omg.CORBA.Any ___a;
  private org.glassfish.idlj.CORBAStruct ___cs;
  private long ___lll;
  private int __discriminator;
  private boolean __uninitialized = true;

  public CORBAUnion ()
  {
  }

  public int discriminator ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    return __discriminator;
  }

  public boolean b ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    verifyb (__discriminator);
    return ___b;
  }

  public void b (boolean value)
  {
    __discriminator = 0;
    ___b = value;
    __uninitialized = false;
  }

  public void b (int discriminator, boolean value)
  {
    verifyb (discriminator);
    __discriminator = discriminator;
    ___b = value;
    __uninitialized = false;
  }

  private void verifyb (int discriminator)
  {
    if (discriminator != 0)
      throw new org.omg.CORBA.BAD_OPERATION ();
  }

  public String w ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    verifyw (__discriminator);
    return ___w;
  }

  public void w (String value)
  {
    __discriminator = 1;
    ___w = value;
    __uninitialized = false;
  }

  public void w (int discriminator, String value)
  {
    verifyw (discriminator);
    __discriminator = discriminator;
    ___w = value;
    __uninitialized = false;
  }

  private void verifyw (int discriminator)
  {
    if (discriminator != 1)
      throw new org.omg.CORBA.BAD_OPERATION ();
  }

  public String s ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    verifys (__discriminator);
    return ___s;
  }

  public void s (String value)
  {
    __discriminator = 2;
    ___s = value;
    __uninitialized = false;
  }

  public void s (int discriminator, String value)
  {
    verifys (discriminator);
    __discriminator = discriminator;
    ___s = value;
    __uninitialized = false;
  }

  private void verifys (int discriminator)
  {
    if (discriminator != 2)
      throw new org.omg.CORBA.BAD_OPERATION ();
  }

  public org.omg.CORBA.Any a ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    verifya (__discriminator);
    return ___a;
  }

  public void a (org.omg.CORBA.Any value)
  {
    __discriminator = 3;
    ___a = value;
    __uninitialized = false;
  }

  public void a (int discriminator, org.omg.CORBA.Any value)
  {
    verifya (discriminator);
    __discriminator = discriminator;
    ___a = value;
    __uninitialized = false;
  }

  private void verifya (int discriminator)
  {
    if (discriminator != 3)
      throw new org.omg.CORBA.BAD_OPERATION ();
  }

  public org.glassfish.idlj.CORBAStruct cs ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    verifycs (__discriminator);
    return ___cs;
  }

  public void cs (org.glassfish.idlj.CORBAStruct value)
  {
    __discriminator = 4;
    ___cs = value;
    __uninitialized = false;
  }

  public void cs (int discriminator, org.glassfish.idlj.CORBAStruct value)
  {
    verifycs (discriminator);
    __discriminator = discriminator;
    ___cs = value;
    __uninitialized = false;
  }

  private void verifycs (int discriminator)
  {
    if (discriminator != 4)
      throw new org.omg.CORBA.BAD_OPERATION ();
  }

  public long lll ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    verifylll (__discriminator);
    return ___lll;
  }

  public void lll (long value)
  {
    __discriminator = -2147483648;
    ___lll = value;
    __uninitialized = false;
  }

  public void lll (int discriminator, long value)
  {
    verifylll (discriminator);
    __discriminator = discriminator;
    ___lll = value;
    __uninitialized = false;
  }

  private void verifylll (int discriminator)
  {
    if (discriminator == 0 || discriminator == 1 || discriminator == 2 || discriminator == 3 || discriminator == 4)
      throw new org.omg.CORBA.BAD_OPERATION ();
  }

} // class CORBAUnion
