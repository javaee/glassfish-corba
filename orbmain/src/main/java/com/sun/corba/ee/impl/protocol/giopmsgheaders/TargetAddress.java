/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright (c) 1997-2018 Oracle and/or its affiliates. All rights reserved.
 *
 * The contents of this file are subject to the terms of either the GNU
 * General Public License Version 2 only ("GPL") or the Common Development
 * and Distribution License("CDDL") (collectively, the "License").  You
 * may not use this file except in compliance with the License.  You can
 * obtain a copy of the License at
 * https://oss.oracle.com/licenses/CDDL+GPL-1.1
 * or LICENSE.txt.  See the License for the specific
 * language governing permissions and limitations under the License.
 *
 * When distributing the software, include this License Header Notice in each
 * file and include the License file at LICENSE.txt.
 *
 * GPL Classpath Exception:
 * Oracle designates this particular file as subject to the "Classpath"
 * exception as provided by Oracle in the GPL Version 2 section of the License
 * file that accompanied this code.
 *
 * Modifications:
 * If applicable, add the following below the License Header, with the fields
 * enclosed by brackets [] replaced by your own identifying information:
 * "Portions Copyright [year] [name of copyright owner]"
 *
 * Contributor(s):
 * If you wish your version of this file to be governed by only the CDDL or
 * only the GPL Version 2, indicate your decision by adding "[Contributor]
 * elects to include this software in this distribution under the [CDDL or GPL
 * Version 2] license."  If you don't indicate a single choice of license, a
 * recipient has the option to distribute your version of this file under
 * either the CDDL, the GPL Version 2 or to extend the choice of license to
 * its licensees as provided above.  However, if you add GPL Version 2 code
 * and therefore, elected the GPL Version 2 license, then the option applies
 * only if the new code is made subject to such option by the copyright
 * holder.
 */

package com.sun.corba.ee.impl.protocol.giopmsgheaders;


/**
* com/sun/corba/ee/impl/protocol/giopmsgheaders/TargetAddress.java
* Generated by the IDL-to-Java compiler (portable), version "3.0"
* from ../../../../../../../src/share/classes/com/sun/corba/ee/GiopIDL/g.idl
* Sunday, June 4, 2000 5:18:54 PM PDT
*/

public final class TargetAddress implements org.omg.CORBA.portable.IDLEntity
{
  private byte[] ___object_key;
  private org.omg.IOP.TaggedProfile ___profile;
  private com.sun.corba.ee.impl.protocol.giopmsgheaders.IORAddressingInfo ___ior;
  private short __discriminator;
  private boolean __uninitialized = true;

  public TargetAddress ()
  {
  }

  public short discriminator ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    return __discriminator;
  }

  public byte[] object_key ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    verifyobject_key (__discriminator);
    return ___object_key;
  }

  public void object_key (byte[] value)
  {
    __discriminator = com.sun.corba.ee.impl.protocol.giopmsgheaders.KeyAddr.value;
    ___object_key = value;
    __uninitialized = false;
  }

  private void verifyobject_key (short discriminator)
  {
    if (discriminator != com.sun.corba.ee.impl.protocol.giopmsgheaders.KeyAddr.value)
      throw new org.omg.CORBA.BAD_OPERATION ();
  }

  public org.omg.IOP.TaggedProfile profile ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    verifyprofile (__discriminator);
    return ___profile;
  }

  public void profile (org.omg.IOP.TaggedProfile value)
  {
    __discriminator = com.sun.corba.ee.impl.protocol.giopmsgheaders.ProfileAddr.value;
    ___profile = value;
    __uninitialized = false;
  }

  private void verifyprofile (short discriminator)
  {
    if (discriminator != com.sun.corba.ee.impl.protocol.giopmsgheaders.ProfileAddr.value)
      throw new org.omg.CORBA.BAD_OPERATION ();
  }

  public com.sun.corba.ee.impl.protocol.giopmsgheaders.IORAddressingInfo ior ()
  {
    if (__uninitialized)
      throw new org.omg.CORBA.BAD_OPERATION ();
    verifyior (__discriminator);
    return ___ior;
  }

  public void ior (com.sun.corba.ee.impl.protocol.giopmsgheaders.IORAddressingInfo value)
  {
    __discriminator = com.sun.corba.ee.impl.protocol.giopmsgheaders.ReferenceAddr.value;
    ___ior = value;
    __uninitialized = false;
  }

  private void verifyior (short discriminator)
  {
    if (discriminator != com.sun.corba.ee.impl.protocol.giopmsgheaders.ReferenceAddr.value)
      throw new org.omg.CORBA.BAD_OPERATION ();
  }

  public void _default ()
  {
    __discriminator = -32768;
    __uninitialized = false;
  }

} // class TargetAddress
