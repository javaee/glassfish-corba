#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2018 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

orbd.usage=Syntaxe : {0} <options> \
\n\
\no\u00f9 <options> comprend :\
\n  -port                  Port d''activation o\u00f9 le ORBD doit \u00eatre d\u00e9marr\u00e9, 1049 par d\u00e9faut (facultatif)\
\n  -defaultdb             R\u00e9pertoire des fichiers ORBD, par d\u00e9faut "./orb.db" (facultatif)\
\n  -serverid              ID de serveur pour ORBD, 1 (facultatif)\
\n  -ORBInitialPort        Port initial (requis)\
\n  -ORBInitialHost        Nom d''h\u00f4te initial (requis)\
\n\


servertool.usage=Syntaxe : {0} <options> \
\n\
\no\u00f9 <options> comprend :\
\n  -ORBInitialPort        Port initial (requis)\
\n  -ORBInitialHost        Nom d''h\u00f4te initial (requis)\
\n\

servertool.banner=\
\n\
\nBienvenue dans l'outil Java IDL Server Tool \
\nSp\u00e9cifiez des commandes \u00e0 l'invite \
\n\

servertool.shorthelp=\
\n\
\n\tCommandes disponibles : \
\n\t------------------- \
\n\

servertool.baddef=D\u00e9finition de serveur non valide : {0}
servertool.nosuchserver=\tce serveur est introuvable.
servertool.helddown=\tserveur interrompu.
servertool.nosuchorb=\tORB non valide.
servertool.serverup=\tle serveur fonctionne d\u00e9j\u00e0.
servertool.appname=\tNom d''application     - {0}
servertool.name=\tnom      - {0}
servertool.classpath=\tclasspath - {0}
servertool.args=\targs      - {0}
servertool.vmargs=\tvmargs    - {0}
servertool.serverid=\tserver id - {0}
servertool.servernotrunning=\tLe serveur ne fonctionne pas.
servertool.register=\
\n\
\n\tregister -server <nom de classe de serveur> \
\n\t         -applicationName <deuxi\u00e8me nom de serveur> \
\n\t         -classpath <chemin de classe au serveur> \
\n\t         -args <arguments au serveur> \
\n\t         -vmargs <arguments au serveur Java VM>\
\n\

servertool.register1=inscrire un serveur activable
servertool.register2=\tserveur inscrit (ID serveur = {0}).
servertool.register3=\tserveur inscrit mais interrompu (ID serveur = {0}).
servertool.register4=\tserveur d\u00e9j\u00e0 inscrit (ID serveur = {0}).

servertool.unregister=\
\n\tunregister [ -serverid <ID serveur> | -applicationName <nom> ] \
\n\

servertool.unregister1=d\u00e9sinscrire un serveur inscrit
servertool.unregister2=\tserveur d\u00e9sinscrit.

servertool.locate=\
\n\tlocate [ -serverid <ID serveur> | -applicationName <nom> ] [ <-endpointType <type de point d'extr\u00e9mit\u00e9> ] \
\n\

servertool.locate1=rep\u00e9rer des ports de type sp\u00e9cifique d'un serveur inscrit
servertool.locate2=\
\n\
\n\tNom d''h\u00f4te {0} \
\n\
\n\t\tPort\t\tType de port\t\tID ORB\
\n\t\t----\t\t---------\t\t------\
\n\

servertool.locateorb=\
\n\tlocateperorb [ -serverid <ID serveur> | -applicationName <nom> ] [ -orbid <nom ORB> ]\
\n\

servertool.locateorb1=rep\u00e9rer les ports d'un ORB sp\u00e9cifique de serveurs inscrits
servertool.locateorb2=\
\n\
\n\tNom d''h\u00f4te {0} \
\n\
\n\t\tPort\t\tType de port\t\tID ORB\
\n\t\t----\t\t--------\t\t------\
\n\

servertool.getserverid=\n\tgetserverid [ -applicationName <nom> ] \
\n\

servertool.getserverid1=renvoyer l'ID serveur pour un applicationName
servertool.getserverid2=\tL''ID serveur de applicationName {0} est {1}

servertool.list=\n\tlist
\n\

servertool.list1=lister tous les serveurs inscrits
servertool.list2=\
\n\tID serveur\tNom de classe serveur\t\tApplication serveur\
\n\t---------\t-----------------\t\t------------------\
\n\

servertool.listactive=\n\tlistactive
servertool.listactive1=lister les serveurs actifs
servertool.listappnames=\tlistappnames\n
servertool.listappnames1=lister les noms d'application d\u00e9finis
servertool.listappnames2=noms d'application du serveur d\u00e9finis :

servertool.shutdown=\
\n\tshutdown [ -serverid <ID serveur> | -applicationName <nom> ]\
\n\

servertool.shutdown1=arr\u00eater un serveur inscrit
servertool.shutdown2=\tserveur arr\u00eat\u00e9.
servertool.startserver=\
\n\tstartup [ -serverid <ID serveur> | -applicationName <nom> ]\
\n\

servertool.startserver1=d\u00e9marrer un serveur inscrit
servertool.startserver2=\tserveur d\u00e9marr\u00e9.

servertool.quit=\n\tquit\n
servertool.quit1=fermer cet outil

servertool.help=\thelp\
\n\tOR\
\n\thelp <commande>\
\n\

servertool.help1=afficher l'aide

servertool.orbidmap=\tSyntaxe : orblist [ -serverid <ID serveur> | -applicationName <nom> ]\
\n\

servertool.orbidmap1=liste des noms orb et de leur mappage
servertool.orbidmap2=\
\n\tID ORB\t\tNom ORB\
\n\t------\t\t--------\
\n\

pnameserv.success=NameServer persistant d\u00e9marr\u00e9


bootstrap.usage=Syntaxe : {0} <options> \
\n\
\no\u00f9 <options> comprend :\
\n  -ORBInitialPort        Port initial (requis)\
\n  -InitialServicesFile   Fichier contenant la liste des services initiaux (requis)\
\n\

bootstrap.success=configuration du port sur {0} et lecture des services de {1}
bootstrap.filenotreadable=le fichier {0} n''est pas lisible
bootstrap.filenotfound=fichier {0} introuvable
bootstrap.exception=erreur d\u00e9tect\u00e9e pendant l''enregistrement des propri\u00e9t\u00e9s dans le fichier {0} : Erreur {1}

tnameserv.exception=Erreur d\u00e9tect\u00e9e pendant le d\u00e9marrage du service d''amor\u00e7age sur le port {0}
tnameserv.usage=essayez un autre port avec les arguments de ligne de commande -ORBInitialPort <num\u00e9ro de port>
tnameserv.invalidhostoption=ORBInitialHost n'est pas une option valide pour NameService
tnameserv.orbinitialport0=ORBInitialPort 0 n'est pas une option valide pour NameService
tnameserv.hs1=Contexte d''appellation initial :\n{0}
tnameserv.hs2=TransientNameServer : configuration du port pour des r\u00e9f\u00e9rences d''objet initial \u00e0 : {0}
tnameserv.hs3=Pr\u00eat.
