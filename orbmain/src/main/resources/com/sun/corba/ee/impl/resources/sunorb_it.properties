#
# DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
#
# Copyright (c) 1997-2018 Oracle and/or its affiliates. All rights reserved.
#
# The contents of this file are subject to the terms of either the GNU
# General Public License Version 2 only ("GPL") or the Common Development
# and Distribution License("CDDL") (collectively, the "License").  You
# may not use this file except in compliance with the License.  You can
# obtain a copy of the License at
# https://oss.oracle.com/licenses/CDDL+GPL-1.1
# or LICENSE.txt.  See the License for the specific
# language governing permissions and limitations under the License.
#
# When distributing the software, include this License Header Notice in each
# file and include the License file at LICENSE.txt.
#
# GPL Classpath Exception:
# Oracle designates this particular file as subject to the "Classpath"
# exception as provided by Oracle in the GPL Version 2 section of the License
# file that accompanied this code.
#
# Modifications:
# If applicable, add the following below the License Header, with the fields
# enclosed by brackets [] replaced by your own identifying information:
# "Portions Copyright [year] [name of copyright owner]"
#
# Contributor(s):
# If you wish your version of this file to be governed by only the CDDL or
# only the GPL Version 2, indicate your decision by adding "[Contributor]
# elects to include this software in this distribution under the [CDDL or GPL
# Version 2] license."  If you don't indicate a single choice of license, a
# recipient has the option to distribute your version of this file under
# either the CDDL, the GPL Version 2 or to extend the choice of license to
# its licensees as provided above.  However, if you add GPL Version 2 code
# and therefore, elected the GPL Version 2 license, then the option applies
# only if the new code is made subject to such option by the copyright
# holder.
#

orbd.usage=Utilizzo: {0} <opzioni> \
\n\
\ndove <opzioni> comprende:\
\n  -port                  Porta di attivazione da cui avviare ORBD, default 1049 (opzionale)\
\n  -defaultdb             Directory per i file ORBD, default "./orb.db" (opzionale)\
\n  -serverid              Id server per ORBD, default 1 (opzionale)\
\n  -ORBInitialPort        Porta iniziale (richiesta)\
\n  -ORBInitialHost       Nome host iniziale (richiesto)\
\n\


servertool.usage=Utilizzo: {0} <opzioni> \
\n\
\ndove <opzioni> comprende:\
\n  -ORBInitialPort        Porta iniziale (richiesta)\
\n  -ORBInitialHost        Nome host iniziale (richiesto)\
\n\

servertool.banner=\
\n\
\nBenvenuti a Java IDL Server Tool     \
\nimmettere i comandi quando richiesto \
\n\

servertool.shorthelp=\
\n\
\n\tComandi disponibili:\
\n\t-------------------- \
\n\

servertool.baddef=Definizione server errata: {0}
servertool.nosuchserver=\timpossibile trovare il server indicato.
servertool.helddown=\til server \u00e8 mantenuto inattivo.
servertool.nosuchorb=\tORB non valido.
servertool.serverup=\til server \u00e8 gi\u00e0 attivo.
servertool.appname=\tNomeApplicazione     - {0}
servertool.name=\tnome      - {0}
servertool.classpath=\tclasspath - {0}
servertool.args=\targom      - {0}
servertool.vmargs=\targomvm    - {0}
servertool.serverid=\tid server - {0}
servertool.servernotrunning=\til server non \u00e8 in funzione.
servertool.register=\
\n\
\n\tregister -server <nome classe server> \
\n\t         -applicationName <nome server alternativo> \
\n\t         -classpath <classpath per il server> \
\n\t         -args <argom per il server> \
\n\t         -vmargs <argom per la Java VM del server>\
\n\

servertool.register1=registra un server attivabile
servertool.register2=\tserver registrato (idserver = {0}).
servertool.register3=\tserver registrato ma mantenuto inattivo (idserver = {0}).
servertool.register4=\tserver gi\u00e0 registrato (idserver = {0}).

servertool.unregister=\
\n\tunregister [ -serverid <id server> | -applicationName <nome> ] \
\n\

servertool.unregister1=rimuovi un server registrato.
servertool.unregister2=\tserver rimosso dal registro.

servertool.locate=\
\n\tlocate [ -serverid <id server> | -applicationName <nome> ] [ <-endpointType <endpointType> ] \
\n\

servertool.locate1=individua le porte di un tipo specifico per un server registrato
servertool.locate2=\
\n\
\n\tNome host {0} \
\n\
\n\t\tPorta\t\tTipo porta\t\tId ORB\
\n\t\t-----\t\t----------\t\t------\
\n\

servertool.locateorb=\
\n\tlocateperorb [ -serverid <id server> | -applicationName <nome> ] [ -orbid <nome ORB> ]\
\n\

servertool.locateorb1=individua le porte per un orb specifico di un server registrato
servertool.locateorb2=\
\n\
\n\tNome host {0} \
\n\
\n\t\tPorta\t\tTipoPorta\t\tId ORB\
\n\t\t-----\t\t---------\t\t------\
\n\

servertool.getserverid=\n\tgetserverid [ -applicationName <nome> ] \
\n\

servertool.getserverid1=restituisce l'id server per un applicationName
servertool.getserverid2=\tL''ID server per applicationName {0} \u00e8 {1}

servertool.list=\n\tlist\
\n\

servertool.list1=elenca tutti i server registrati
servertool.list2=\
\n\tID server\tNome classe server\t\tApplicazione server\
\n\t---------\t------------------\t\t-------------------\
\n\

servertool.listactive=\n\tlistactive
servertool.listactive1=elenca i server attualmente attivi
servertool.listappnames=\tlistappnames\n
servertool.listappnames1=elenca gli applicationName attualmente definiti
servertool.listappnames2=applicationName del server attualmente definiti:

servertool.shutdown=\
\n\tshutdown [ -serverid <id server> | -applicationName <nome> ]\
\n\

servertool.shutdown1=arresta un server registrato
servertool.shutdown2=\tserver arrestato correttamente
servertool.startserver=\
\n\tstartup [ -serverid <id server> | -applicationName <nome> ]\
\n\

servertool.startserver1=avvia un server registrato
servertool.startserver2=\tserver avviato correttamente.

servertool.quit=\n\tquit\n
servertool.quit1=esci dall'applicazione corrente

servertool.help=\thelp\
\n\tOR\
\n\thelp <nome comando>\
\n\

servertool.help1=get help

servertool.orbidmap=\tUtilizzo: orblist [ -serverid <id server> | -applicationName <nome> ]\
\n\

servertool.orbidmap1=elenco dei nomi orb e relativa mappatura
servertool.orbidmap2=\
\n\tId ORB\t\tNome ORB\
\n\t------\t\t--------\
\n\

pnameserv.success=NameServer persistente avviato correttamente


bootstrap.usage=Utilizzo: {0} <opzioni> \
\n\
\ndove <opzioni> comprende:\
\n  -ORBInitialPort        Porta iniziale (richiesta)\
\n  -InitialServicesFile   File contenente l''elenco dei servizi iniziali (richiesto)\
\n\

bootstrap.success=impostazione porta su {0} e lettura servizi da {1} in corso
bootstrap.filenotreadable=il file {0} non \u00e8 leggibile
bootstrap.filenotfound=impossibile trovare il file {0}
bootstrap.exception=rilevata un''eccezione durante il salvataggio delle propriet\u00e0 nel file {0}: eccezione {1}


tnameserv.exception=rilevata un''eccezione durante l''avvio del servizio di bootstrap sulla porta {0}
tnameserv.usage=utilizzare un'altra porta con gli argomenti di riga di comando -ORBInitialPort <n.porta>
tnameserv.invalidhostoption=ORBInitialHost non \u00e8 un'opzione valida per NameService
tnameserv.orbinitialport0=ORBInitialPort 0 non \u00e8 un'opzione valida per NameService
tnameserv.hs1=Contesto di denominazione iniziale:\n{0}
tnameserv.hs2=TransientNameServer: impostazione della porta per i riferimenti degli oggetti iniziali a: {0}
tnameserv.hs3=Pronto.



